[build]
  command = "npm run build"
  functions = "src/functions"
  publish = "_site"

# ---------------------------------------------------------------------------- #
# Build plugins                                                                #
# ---------------------------------------------------------------------------- #

[[plugins]]
package = "netlify-plugin-a11y"
  [plugins.inputs]
  checkPaths = [
    '/',
    '/about/',
    '/blog/',
    '/contact/',
    '/projects/',
  ]

[[plugins]]
package = "netlify-plugin-debug-cache"

[[plugins]]
package = "netlify-plugin-html-validate"
  [plugins.inputs]
  ext = "html"
  config = ".htmlvalidate.json"

[[plugins]]
package = "netlify-plugin-is-website-vulnerable"

[context.production]
  command = "npm run build"

[context.deploy-preview]
  command = "npm run build"

# ---------------------------------------------------------------------------- #
# Cache headers                                                                #
# ---------------------------------------------------------------------------- #

# Most of the time, we do NOT want to set the cache-control header for a site
# hosted on Netlify. Here is why:
# https://www.netlify.com/blog/2017/02/23/better-living-through-caching/

# Be sure to never store the service worker in any cache (no-store), and clear
# any existing cache responses (max-age=0)
# As far as I understand, the sw.js file is invalidated in the HTTP cache every
# 24 hours, so no-store,max-age=0 is probably overkill. Since sw.js is a tiny
# file, I think it's better to err on the side of caution.
# https://chromium.googlesource.com/chromium/src/+/master/docs/security/service-worker-security-faq.md#do-service-workers-live-forever
[[headers]]
  for = "/sw.js"
  [headers.values]
    cache-control = "no-store,max-age=0"

# ---------------------------------------------------------------------------- #
# Security headers                                                             #
# ---------------------------------------------------------------------------- #

# Permissions-Policy is only partially supported in Chrome
# https://caniuse.com/?search=Permissions-Policy

# HSTS preload: READ THIS CAREFULLY!
# https://docs.netlify.com/domains-https/https-ssl/#hsts-preload
# https://hstspreload.org/#deployment-recommendations
# Check HSTS preload status here:
# https://hstspreload.org/

[[headers]]
  for = "*"
  [headers.values]
    NEL = '{"report_to":"default","max_age":31536000,"include_subdomains":true}'
    Permissions-Policy = "geolocation=(), microphone=(), vibrate=()"
    Referrer-Policy = "no-referrer, strict-origin-when-cross-origin"
    Report-To = '''
    {
      "group": "default",
      "max_age": 31536000,
      "endpoints": [
        {"url": "https://giacomodebidda.report-uri.com/a/d/g"}
      ],
      "include_subdomains":true
    }
    '''
    Strict-Transport-Security = "max-age=63072000; includeSubDomains; preload"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"

# ---------------------------------------------------------------------------- #
# Content-Security-Policy (it's a security header)                             #
# ---------------------------------------------------------------------------- #

# The Content-Security-Policy header should only be sent for HTML resources, but
# if I use for = "*.html" Netlify does not seem to send it every time (should I
# redirect DOMAIN/blog to DOMAIN/blog/index.html ?)
# https://webhint.io/docs/user-guide/hints/hint-no-html-only-headers/

# connect-src
# I need to download web fonts from Google Fonts, and images from Cloudinary

# default-src
# I would like to use default-src: 'none', but prefetch-src is currently not
# supported in any browser, so I have no choice. I cannot use default-src: 'none'
# because it would prevent prefetching resources from this origin (which I am
# doing with instant.page.js).
# https://caniuse.com/?search=prefetch-src

# font-src
# allow only font files hosted on this origin (self-hosted) or on Google Fonts.

# frame-src
# allow iframes from YouTube, Vimeo.

# img-src
# allow images hosted on this origin or on my Cloudinary media library.

# prefetch-src
# still not supported by any browser
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/prefetch-src

# trusted-types and require-trusted-types-for?
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types

# report-uri
# send CSP violations to reporting service
# Note: report-uri is a deprecated CSP directive, but I include it here because
# Firefox does not yet support the report-to CSP directive, nor the Report-To header.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/report-uri
# report-to: indicate a groupname that matches one of the groups defined in the Report-To header.

# script-src, style-src
# This website has some CSS and JS inlined in the <head> for performance reasons
# (critical CSS and JS). The CSP allows inline scripts and stylesheets only when
# either 'unsafe-inline', a SHA or a nonce are used. It's better to avoid
# 'unsafe-inline' altogether, so I generate all nonces and write the netlify.toml
# at build time.
# https://docs.netlify.com/configure-builds/file-based-configuration/#inject-environment-variable-values
# https://content-security-policy.com/nonce/
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script

# worker-src
# this should be supported by Chrome and Firefox.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/worker-src

[[headers]]
  for = "*"
  [headers.values]
    Content-Security-Policy = '''
    base-uri 'self';
    connect-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com https://res.cloudinary.com;
    default-src 'self';
    font-src 'self' https://fonts.gstatic.com;
    form-action 'self';
    frame-ancestors 'none';
    frame-src https://www.youtube.com/embed/ https://player.vimeo.com/video/;
    img-src 'self' https://res.cloudinary.com/jackdbd/image/upload/;
    manifest-src 'self';
    media-src 'self' https://res.cloudinary.com/jackdbd/image/upload/;
    object-src 'none';
    report-to default;
    report-uri https://giacomodebidda.report-uri.com;
    script-src 'self' 'nonce-NONCE_INLINE_JS';
    style-src 'self' 'nonce-NONCE_INLINE_CSS' https://fonts.googleapis.com https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css;
    upgrade-insecure-requests;
    worker-src 'self';
    '''

# ---------------------------------------------------------------------------- #
# Redirects                                                                    #
# ---------------------------------------------------------------------------- #

[[redirects]]
  from = "*"
  to = "/404"
  status = 404
