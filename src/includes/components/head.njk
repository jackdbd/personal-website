<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="{{ description or metadata.description }}">
  <title>{{ title or metadata.title }}</title>
  {% set absolutePageUrl %}
    {{ page.url | url | absoluteUrl(metadata.url) }}
  {% endset %}

  {# TODO: how to get the base URL? The website base URL is dynamic, because the
  website could be running locally (either with eleventy --serve or netlify dev),
  or it could be deployed on netlify (either with a deploy preview or a with a
  production deploy). If I use <base> with a wrong URL all requests are
  considered cross-origin, so the browser refuse both sw.js and the webmanifest. #}
  {# <base href="{{ env.domain }}">  #}

  {# Here I use dns-prefetch to resolve some domain names before resources get
  requested, and preconnect to establish a connection with those servers. See:
  https://developer.mozilla.org/en-US/docs/Web/Performance/dns-prefetch#best_practices
  #}

  {# Google Fonts stylesheets #}
  <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
  <link rel="dns-prefetch" href="https://fonts.googleapis.com">
  {# Google Fonts font files (e.g. woff, woff2) #}
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="dns-prefetch" href="https://fonts.gstatic.com">
  {# Cloudinary (CDN where I host all my images and media) #}
  <link rel="preconnect" href="https://res.cloudinary.com" crossorigin>
  <link rel="dns-prefetch" href="https://res.cloudinary.com">

  {# OGP meta Tags for Facebook #}
  {# https://ogp.me/ #}
  {# TODO: think about autogenerating og:image if the blog post has an image.
  The alternative would be to write ogp.image in the frontmatter manually. #}
  {# required OGP meta tags #}
  <meta property="og:title" content="{{ title or metadata.title }}">
  <meta property="og:type" content="{{ ogp.type or metadata.ogp.type }}">
  <meta property="og:image" content="{{ ogp.image or metadata.profilePic }}" />
  <meta property="og:url" content="{{ absolutePageUrl }}">
  {# not required OGP meta tags #}
  <meta property="og:description" content="{{ description or metadata.description }}">
  <meta property="og:locale" content="en_US">
  {% if ogp.video %}
    <meta property="og:video" content="{{ ogp.video }}">
  {% endif %}

  {# TODO: add images for sharing the content on Twitter #}
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:url" content="{{ absolutePageUrl }}">
  <meta property="twitter:title" content="{{ title or metadata.title }}">
  <meta property="twitter:description" content="{{ description or metadata.description }}">
  <meta property="twitter:image" content="{{ metadata.profilePic }}">

  <meta name="theme-color" content="#1a1a1a">

  {# Favicons for each device #}
  {# TODO: minify them! Use a plugin/shortcode to add them #}
  <link rel="shortcut icon" href="/assets/img/favicon/favicon.ico">
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/img/favicon/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="{{ '/assets/img/favicon/favicon-32x32.png' | url }}">
  <link rel="icon" type="image/png" sizes="16x16" href="{{ '/assets/img/favicon/favicon-16x16.png' | url }}">

  {# Web app manifest for PWA installation #}
  <link rel="manifest" href="/manifest.webmanifest">

  {# Inline CSS (critical CSS) #}
  {% set css %}
    {% include "assets/css/inline.css" %}
  {% endset %}
  <style nonce="{{ env.nonce_inline_css }}">{{ css | cssmin | safe }}</style>

  {# Non-inlined CSS #}
  <link href="https://fonts.googleapis.com/css2?family=Lato&family=Nunito:wght@800&family=Source+Code+Pro&display=swap&display=swap" rel="stylesheet" crossorigin>

  {# This stylesheet is render-blocking, but I don't think it's feasible to preload it without causing layout shifts,
  since it defines the entire website layout #}
  <link rel="stylesheet" href="/assets/css/style.css">

  {# RSS Feed #}
  <link rel="alternate" href="{{ metadata.url }}/feed.xml" title="{{ metadata.title }}" type="application/atom+xml">

  {# Inline JS #}
  {% set js %}
    {% include "assets/js/inline.js" %}
  {% endset %}
  <script nonce="{{ env.nonce_inline_js }}">{{ js | jsmin | safe }}</script>

  {# Non-inlined JS: use async or defer #}
  <script defer src="/assets/js/instantpage.min.js"></script>
</head>
