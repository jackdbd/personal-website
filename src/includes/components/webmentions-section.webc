<script webc:type="js" webc:is="template" webc:root :id="uid" aria-label="list of webmentions">

  async function renderItems() {
      const webmentions = await this.helpers.webmentionsSentToRelativePath(this['$data'].page.url)
      
      const s = [
        `webmentions created by`,
        `<a href="https://brid.gy" target="_blank" rel="external noopener noreferrer">Bridgy</a>`,
        `and sent to`,
        `<a href="https://webmention.io" target="_blank" rel="external noopener noreferrer">Webmention.io</a>`
      ].join(' ')

      const { likes, replies, reposts } = webmentions

      let h3_likes = ''
      if (likes.length === 0) {
        h3_likes = `<h3>No Likes</h3>`
      } else if (likes.length === 1) {
        h3_likes = `<h3>1 Likes</h3>`
      } else {
        h3_likes = `<h3>${likes.length} Likes</h3>`
      }

      let h3_reposts = ''
      if (reposts.length === 0) {
        h3_reposts = `<h3>No Reposts</h3>`
      } else if (reposts.length === 1) {
        h3_reposts = `<h3>1 Repost</h3>`
      } else {
        h3_reposts = `<h3>${reposts.length} Reposts</h3>`
      }

      let h3_replies = ''
      if (replies.length === 0) {
        h3_replies = `<h3>No Replies</h3>`
      } else if (replies.length === 1) {
        h3_replies = `<h3>1 Reply</h3>`
      } else {
        h3_replies = `<h3>${replies.length} Replies</h3>`
      }

      const li_reposts = reposts.map((wm, i) => {
        // console.log(`=== reposts[${i}] ===`, wm)

        const date = new Date(wm.published || wm['wm-received'])
        const published = this.helpers.humanDateJS(date)

        const author = this.helpers.sanitizeWebmentionAuthor(wm.author)
        const authorName = author.name
        const imgSrc = author.photo
        const imgAlt = `${author.name}'s avatar`
        // const href = author.url
        const href = wm.url

        return `
        <li>
          <webmention-repost src="${imgSrc}" alt="${imgAlt}" href="${href}"></webmention-repost>
        </li>`
        })

      const li_replies = replies.map((wm, i) => {
        // console.log(`=== replies[${i}] ===`, wm)

        const date = new Date(wm.published || wm['wm-received'])
        const published = this.helpers.humanDateJS(date)

        const author = this.helpers.sanitizeWebmentionAuthor(wm.author)
        const authorName = author.name
        const imgSrc = author.photo
        const imgAlt = `${author.name}'s avatar`
        const authorUrl = author.url

        // a webmention of type mention-of apparently can have no content at all.
        // I am not sure whether all webmentions of type mention-of have no content.
        if (!wm.content) {
          return `
        <li>
          <webmention-entry>
            <webmention-author src="${imgSrc}" alt="${imgAlt}" href="${authorUrl}" @name="${authorName}">
              <span slot="author-action">
                <a href="${wm.url}" target="_blank" rel="external noopener noreferrer">mentioned this</a> on <time datetime="${date}">${published}</time>
              </span>
            </webmention-author>
          </webmention-entry>
        </li>`
        }

        // const replyHtml = wm.content.html ? `<blockquote>${wm.content.html}</blockquote>` : ''
        const reply = wm.content.html ? `<em>${wm.content.html}</em>` : wm.content.text
        // const reply = wm.content.html ? `<em>${wm.content.html}</em>` : ''

        return `
        <li>
          <webmention-entry>
            <webmention-author src="${imgSrc}" alt="${imgAlt}" href="${authorUrl}" @name="${authorName}">
              <span slot="author-action">
                <a href="${wm.url}" target="_blank" rel="external noopener noreferrer">replied</a> on <time datetime="${date}">${published}</time>
              </span>
            </webmention-author>
            ${reply}
          </webmention-entry>
        </li>`
      })

      const li_likes = likes.map((wm, i) => {
        // console.log(`=== likes[${i}] ===`, wm)

        const date = new Date(wm.published || wm['wm-received'])
        const published = this.helpers.humanDateJS(date)

        const author = this.helpers.sanitizeWebmentionAuthor(wm.author)
        const authorName = author.name
        const imgSrc = author.photo
        const imgAlt = `${author.name}'s avatar`
        const authorUrl = author.url

        return `
        <li>
          <webmention-like src="${imgSrc}" alt="${imgAlt}" href="${authorUrl}"></webmention-like>
        </li>`

      })

      const ul_class = 'flex -space-x-4 stack-space:s'

      let webmentions_html = ''
      if (li_reposts.length === 0 && li_replies.length === 0 && li_likes.length === 0) {
        webmentions_html = `<p>No webmentions to show.</p>`
      }

      if (li_replies.length > 0) {
        const ol_replies = `<ol class="stack stack-space:s">${li_replies.join('')}</ol>`
        webmentions_html = webmentions_html.concat(`${h3_replies}${ol_replies}`)
      }
      
      if (li_reposts.length > 0) {
        const ul_reposts = `<ul class="${ul_class}">${li_reposts.join('')}</ul>`
        webmentions_html = webmentions_html.concat(`${h3_reposts}${ul_reposts}`)
      }

      if (li_likes.length > 0) {
        const ul_likes = `<ul class="${ul_class}">${li_likes.join('')}</ul>`
        webmentions_html = webmentions_html.concat(`${h3_likes}${ul_likes}`)
      }

      return `
      <section class="flow region">
        <h2>Webmentions</h2>
        <div class="stack">
          <p><em>${s}</em></p>
          ${webmentions_html}
        </div>
      </section>`
    }

  renderItems();
</script>
